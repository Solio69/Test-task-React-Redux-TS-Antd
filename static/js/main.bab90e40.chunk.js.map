{"version":3,"sources":["components/buttons/button-in-userPreview/ButtonInList.module.scss","components/input/AntInput.module.scss","components/sorting/Sorting.module.scss","components/users-list/UsersList.module.scss","components/loader/Loader.module.scss","pages/home/HomePage.module.scss","components/plug/Plug.module.scss","components/buttons/button-in-userPreview/ButtonInUserPreview.tsx","store/users/usersActions.tsx","store/users/usersSlise.tsx","store/store.tsx","store/hooks/redux.tsx","components/form/completed-form/index.tsx","components/form/completed-form/CompletedForm.tsx","components/form/modal/ModalEdit.tsx","services/apiService.tsx","components/user-preview/index.tsx","components/user-preview/UserPreview.tsx","utils/index.tsx","components/users-list/index.tsx","components/users-list/UsersList.tsx","components/input/index.tsx","components/input/AntInput.tsx","components/sorting/index.tsx","components/sorting/Sorting.tsx","components/pagination/index.tsx","components/pagination/AntPagination.tsx","components/loader/index.tsx","components/loader/Loader.tsx","pages/home/index.tsx","pages/home/HomePage.tsx","components/plug/index.tsx","components/plug/Plug.tsx","components/user-full/index.tsx","components/user-full/UserFull.tsx","app/App.tsx","index.tsx","components/user-preview/UserPreview.module.scss","components/form/completed-form/CompletedForm.module.scss","components/pagination/AntPagination.module.scss"],"names":["module","exports","ButtonInUserPreviewVariant","baseStr","fetchGetUsers","createAsyncThunk","name","a","rejectWithValue","url","fetch","method","headers","response","ok","Error","status","json","message","usersSlise","createSlice","initialState","usersList","searchStr","isSorting","maxPages","activePage","elementsOnPage","isLoading","reducers","changeSearchStr","state","action","payload","sortingUserList","changesElementsOnPage","changesMaxPages","changesNumPage","changesUserData","extraReducers","pending","type","fulfilled","lenghtList","length","Number","Math","ceil","rejected","actions","rootReduser","combineReducers","usersReduser","useAppDispatch","useDispatch","useAppSelector","useSelector","CompletedForm","age","updateUserData","useState","value","fields","size","onFinish","className","styles","editForm","Item","formItem","label","htmlType","ModalEdit","isModalVisible","onCloseModal","title","visible","onCancel","footer","width","ApiService","id","newUserData","body","this","JSON","stringify","apiService","ButtonInUserPreview","onClickFunc","variant","edit","userButtonEdit","userButtonDelete","onClick","FormOutlined","CloseCircleOutlined","UserPreview","dispath","newAge","setNewAge","newName","setNewName","randonAvatar","min","max","rand","random","round","randomInteger","routStr","setIsModalVisible","modal","newObj","putUserUpdate","then","res","newUserList","map","el","userPreview","userAvatarWrapper","src","alt","userInfo","to","userInfoItem","buttonInList","delete","deleteUser","UsersList","usersData","renderList","oldArr","newList","sort","nex","prev","sortingList","elementsOnPageNum","oneElem","splice","getPartList","AntInput","inputWrapper","placeholder","onChange","event","target","trim","toLowerCase","defaultValue","Sorting","sorting","sortingText","CaretUpOutlined","CaretDownOutlined","AntPagination","useEffect","currentTarget","innerText","pagination","paginationSettings","paginationSettingsText","total","current","showSizeChanger","page","Loader","HomePage","debouncedDispathFetchGetUsers","debounce","loader","input","list","main","Plug","plug","UserFull","App","path","element","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bab90e40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userButtonEdit\":\"ButtonInList_userButtonEdit__19ekb\",\"userButtonDelete\":\"ButtonInList_userButtonDelete__1UWRe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"AntInput_inputWrapper__1FO2_\",\"ant-input\":\"AntInput_ant-input__2ouOV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sorting\":\"Sorting_sorting__1MpOR\",\"sortingText\":\"Sorting_sortingText__2yOrj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersList\":\"UsersList_usersList__KaSBr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-spin-spinning\":\"Loader_ant-spin-spinning__3L2EB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"HomePage_main__NSygf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"plug\":\"Plug_plug__3ew8t\"};","import React, { FC } from 'react';\nimport { FormOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport styles from './ButtonInList.module.scss';\n\nexport enum ButtonInUserPreviewVariant{\n  delete = 'delete',\n  edit = 'edit',\n}\n\ninterface ButtonInUserPreviewProps{\n  onClickFunc:()=>void\n  variant:ButtonInUserPreviewVariant\n}\n\nconst ButtonInUserPreview:FC<ButtonInUserPreviewProps> = ({ onClickFunc, variant }) => {\n  const onClick = () => {\n    onClickFunc();\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={variant === ButtonInUserPreviewVariant.edit ? styles.userButtonEdit : styles.userButtonDelete}\n      onClick={onClick}\n    >\n      {variant === ButtonInUserPreviewVariant.edit ? <FormOutlined /> : <CloseCircleOutlined />}\n      {variant === ButtonInUserPreviewVariant.edit ? 'Edit' : 'Delete'}\n    </button>\n  );\n};\n\nexport default ButtonInUserPreview;\n","/* eslint-disable @typescript-eslint/default-param-last */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nconst baseStr = 'https://621c7b30768a4e1020ab3244.mockapi.io/api';\n\nconst fetchGetUsers = createAsyncThunk(\n  'users/fetchGetUsers',\n  async (name:string, { rejectWithValue }) => {\n    const url = name ? `${baseStr}/users?name=${name}` : `${baseStr}/users`;\n    try {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error ${response.status}!`);\n      }\n\n      return await response.json();\n    } catch (error: any) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport { fetchGetUsers };\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { fetchGetUsers } from './usersActions';\nimport { IUser } from '../../types/types';\n\ninterface InitialStateTypes {\n  usersList: IUser[],\n  searchStr:string,\n  isSorting:'sortUp' | 'sortDown' | '',\n  maxPages:number,\n  activePage:number,\n  elementsOnPage:string,\n  isLoading:boolean\n}\n\nconst initialState: InitialStateTypes = {\n  usersList: [],\n  searchStr: '',\n  isSorting: '',\n  maxPages: 0,\n  activePage: 1,\n  elementsOnPage: '5',\n  isLoading: true,\n};\n\nexport const usersSlise = createSlice({\n  name: 'users',\n  initialState,\n\n  reducers: {\n    changeSearchStr (state, action:PayloadAction<string>) {\n      state.searchStr = action.payload;\n    },\n\n    sortingUserList (state, action:PayloadAction<'sortUp' | 'sortDown' | ''>) {\n      state.isSorting = action.payload;\n    },\n\n    changesElementsOnPage (state, action:PayloadAction<string>) {\n      state.elementsOnPage = action.payload;\n    },\n\n    changesMaxPages (state, action:PayloadAction<number>) {\n      state.maxPages = action.payload;\n    },\n\n    changesNumPage (state, action:PayloadAction<number>) {\n      state.activePage = action.payload;\n    },\n\n    changesUserData (state, action:PayloadAction<IUser[]>) {\n      state.usersList = action.payload;\n    },\n  },\n\n  extraReducers: {\n    [fetchGetUsers.pending.type]: (state) => {\n      state.isLoading = true;\n    },\n\n    [fetchGetUsers.fulfilled.type]: (state, action) => {\n      state.usersList = action.payload;\n      state.isLoading = false;\n      const lenghtList = action.payload.length;\n      // если elementsOnPage приводится к числу, то считает максимальное кол-во страниц\n      const elementsOnPage = (Number(state.elementsOnPage));\n      if (elementsOnPage) {\n        // то пересчитает maxPages\n        state.maxPages = Math.ceil(lenghtList / elementsOnPage);\n      }\n    },\n\n    [fetchGetUsers.rejected.type]: (state, action) => {\n      // console.log('rejected', action.payload)\n      state.isLoading = false;\n    },\n  },\n});\n\nexport const {\n  changeSearchStr, sortingUserList, changesElementsOnPage, changesNumPage, changesMaxPages, changesUserData,\n} = usersSlise.actions;\n\nexport default usersSlise.reducer;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport usersReduser from './users/usersSlise';\n\nconst rootReduser = combineReducers({\n  usersReduser,\n});\n\nexport const setUpStore = () => configureStore({\n  reducer: rootReduser,\n});\n\nexport type RootState = ReturnType<typeof rootReduser>;\nexport type AppStore = ReturnType<typeof setUpStore>;\nexport type AppDispatch = AppStore['dispatch'];\n\nexport default rootReduser;\n","import {\n  useSelector, useDispatch, TypedUseSelectorHook,\n} from 'react-redux';\nimport { AppDispatch, RootState } from '../store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector:TypedUseSelectorHook<RootState> = useSelector;\n","import CompletedForm from './CompletedForm';\n\nexport default CompletedForm;\n","import React, { FC, useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport styles from './CompletedForm.module.scss';\n\ninterface CompletedFormProps{\n  age?: number\n  name?: string\n  updateUserData:(value:{ age:number, name:string }) => void\n}\n\nconst CompletedForm:FC<CompletedFormProps> = ({ name, age, updateUserData }) => {\n  const onFinish = (value:{ age:number, name:string }) => {\n    updateUserData(value);\n  };\n\n  // если данные были переданы то использует их\n  const [fields] = useState([\n    {\n      name: ['name'],\n      value: name || '',\n    },\n    {\n      name: ['age'],\n      value: age || '',\n    },\n  ]);\n\n  // форма заполненная данными\n  return (\n    <Form\n      size=\"middle\"\n      onFinish={onFinish}\n      fields={fields}\n      className={styles.editForm}\n    >\n      <Form.Item className={styles.formItem} name=\"name\" label=\"Name\">\n        <Input type=\"text\" />\n      </Form.Item>\n\n      <Form.Item className={styles.formItem} name=\"age\" label=\"Age\">\n        <Input type=\"number\" />\n      </Form.Item>\n\n      <Form.Item className={styles.formItem}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Save\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default CompletedForm;\n","import React, { FC } from 'react';\nimport { Modal } from 'antd';\nimport CompletedForm from '../completed-form';\n\ninterface ModalEditProps{\n  age?: number\n  name?: string\n  updateUserData:(value:{ age:number, name:string }) => void\n  isModalVisible: boolean\n  onCloseModal:() => void\n}\n\nconst ModalEdit:FC<ModalEditProps> = ({\n  name, age, updateUserData, isModalVisible, onCloseModal,\n}) => {\n  const onCancel = () => {\n    onCloseModal();\n  };\n\n  return (\n    <Modal\n      title=\"Change user data\"\n      visible={isModalVisible}\n      onCancel={onCancel}\n      footer={false}\n      width={400}\n    >\n      <CompletedForm name={name} age={age} updateUserData={updateUserData} />\n    </Modal>\n  );\n};\n\nexport default ModalEdit;\n","class ApiService {\n  baseStr = 'https://621c7b30768a4e1020ab3244.mockapi.io/api';\n\n  async putUserUpdate (id:string, newUserData:{ age:number, name:string }) {\n    const body = {\n      age: newUserData.age,\n      name: newUserData.name,\n    };\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = await fetch(`${this.baseStr}/users/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(body),\n      headers,\n    });\n\n    return response.json();\n  }\n\n  async deleteUser (id:string) {\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = await fetch(`${this.baseStr}/users/${id}`, {\n      method: 'DELETE',\n      headers,\n    });\n\n    return response.json();\n  }\n}\n\nconst apiService = new ApiService();\n\nexport { apiService };\n","import UserPreview from './UserPreview';\n\nexport default UserPreview;\n","/* eslint-disable no-return-assign */\n/* eslint-disable no-param-reassign */\nimport React, { FC, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { IUser } from '../../types/types';\nimport ModalEdit from '../form/modal/ModalEdit';\nimport { fetchGetUsers } from '../../store/users/usersActions';\nimport { randomInteger } from '../../utils';\nimport { changesUserData } from '../../store/users/usersSlise';\nimport { useAppSelector, useAppDispatch } from '../../store/hooks/redux';\nimport { apiService } from '../../services/apiService';\nimport styles from './UserPreview.module.scss';\nimport 'antd/es/modal/style/css';\nimport ButtonInUserPreview, { ButtonInUserPreviewVariant } from '../buttons/button-in-userPreview/ButtonInUserPreview';\n\ninterface UserPreviewProps {\n  id:string,\n  name:string,\n  age:number\n}\n\nconst UserPreview:FC<UserPreviewProps> = ({ id, name, age }) => {\n  const dispath = useAppDispatch();\n  const { usersList } = useAppSelector((state) => state.usersReduser);\n  const [newAge, setNewAge] = useState(age);\n  const [newName, setNewName] = useState(name);\n\n  // генерирует ссылку на рандомный аватар\n  const randonAvatar = `https://i.pravatar.cc/150?img=${randomInteger(1, 70)}`;\n\n  const routStr = `/user/${name}`;\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const onCloseModal = () => {\n    setIsModalVisible(false);\n  };\n\n  const updateUserData = (value:{ age:number, name:string }) => {\n    if (value.age !== age || value.name !== name) {\n      const newObj = {\n        age: Number(value.age),\n        name: value.name,\n      };\n      // запрос на сервер на изменение данный пользоватлея\n      apiService.putUserUpdate(id, newObj)\n        .then((res:IUser) => {\n          if (res.name) {\n            setNewName(res.name);\n          }\n          if (res.age) {\n            setNewAge(res.age);\n          }\n\n          // передает в стор список с измененным элементом\n          const newUserList:IUser[] = [...usersList].map((el:IUser) => (el.id === res.id ? el = res : el));\n\n          dispath(changesUserData(newUserList));\n        });\n    }\n\n    setIsModalVisible(false);\n  };\n\n  const deleteUser = () => {\n    // запрос на сервер с удалением пользователя\n    apiService.deleteUser(id).then(() => {\n      // получает обновленный список пользоватлей\n      dispath(fetchGetUsers(''));\n    });\n  };\n\n  // модальное окно\n  const modal = (\n    <ModalEdit\n      onCloseModal={onCloseModal}\n      name={name}\n      age={age}\n      isModalVisible={isModalVisible}\n      updateUserData={updateUserData}\n    />\n  );\n\n  const userPreview = (\n    <li key={id} className={styles.userPreview}>\n      <div className={styles.userAvatarWrapper}>\n        <img src={randonAvatar} alt=\"avatar\" />\n      </div>\n      <div className={styles.userInfo}>\n        <Link to={routStr}>\n          <div className={styles.userInfoItem}>\n            Name:\n            {' '}\n            {newName}\n          </div>\n        </Link>\n        <div className={styles.userInfoItem}>\n          Age:\n          {' '}\n          {newAge}\n        </div>\n      </div>\n      <div className={styles.buttonInList}>\n        <ButtonInUserPreview\n          variant={ButtonInUserPreviewVariant.edit}\n          onClickFunc={showModal}\n        />\n        <ButtonInUserPreview\n          variant={ButtonInUserPreviewVariant.delete}\n          onClickFunc={deleteUser}\n        />\n      </div>\n    </li>\n  );\n\n  return (\n    <>\n      {userPreview}\n      {modal}\n    </>\n\n  );\n};\n\nexport default UserPreview;\n","// вернет раномное целое число\nconst randomInteger = (min:number, max:number):number => {\n  const rand = min - 0.5 + Math.random() * (max - min + 1);\n\n  return Math.round(rand);\n};\n\nexport { randomInteger };\n","import UsersList from './UsersList';\n\nexport default UsersList;\n","/* eslint-disable max-len */\nimport React, { FC } from 'react';\nimport { useAppSelector } from '../../store/hooks/redux';\nimport UserPreview from '../user-preview';\nimport styles from './UsersList.module.scss';\n\nconst UsersList:FC = () => {\n  const usersData = useAppSelector((state) => state.usersReduser);\n  const {\n    usersList, isSorting, elementsOnPage, activePage,\n  } = usersData;\n\n  // вернет отсортированный список\n  const sortingList = () => {\n    const newList = [...usersList];\n    if (isSorting === 'sortDown') {\n      return newList.sort((nex, prev) => (nex.age < prev.age ? 1 : -1));\n    } if (isSorting === 'sortUp') {\n      return newList.sort((nex, prev) => (nex.age > prev.age ? 1 : -1));\n    }\n\n    return newList;\n  };\n\n  // получить часть списка в зависимости от количества элементов на странице и номера страницы\n  function getPartList () {\n    const oldArr = [...sortingList()];\n    let newArr = [];\n    const elementsOnPageNum = Number(elementsOnPage);\n    if (elementsOnPageNum) {\n      const oneElem = ((activePage - 1) * elementsOnPageNum);\n      newArr = oldArr.splice(oneElem, elementsOnPageNum);\n\n      return newArr;\n    }\n\n    return oldArr;\n  }\n\n  const renderList = usersList ? getPartList().map((el) => <UserPreview id={el.id} name={el.name} age={el.age} key={el.id} />) : [];\n\n  return (\n    <ul className={styles.usersList}>\n      {renderList}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import AntInput from './AntInput';\n\nexport default AntInput;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { FC, ChangeEvent } from 'react';\nimport { Input } from 'antd';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks/redux';\nimport { changeSearchStr } from '../../store/users/usersSlise';\nimport styles from './AntInput.module.scss';\nimport 'antd/es/input/style/css';\n\nconst AntInput:FC = () => {\n  const dispath = useAppDispatch();\n  const { searchStr } = useAppSelector((state) => state.usersReduser);\n\n  // получит значение из input и передаст его в stor redux\n  const onChange = (event:ChangeEvent<HTMLInputElement>):void => {\n    let { value } = event.target;\n    value = value.trim().toLowerCase();\n    dispath(changeSearchStr(value));\n  };\n\n  return (\n    <div className={styles.inputWrapper}>\n      <Input\n        placeholder=\"Search by name\"\n        onChange={onChange}\n        className={styles['ant-input']}\n        defaultValue={searchStr}\n      />\n    </div>\n\n  );\n};\n\nexport default AntInput;\n","import Sorting from './Sorting';\n\nexport default Sorting;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { FC } from 'react';\nimport { CaretUpOutlined, CaretDownOutlined } from '@ant-design/icons';\nimport { useAppDispatch } from '../../store/hooks/redux';\nimport { sortingUserList } from '../../store/users/usersSlise';\n\nimport styles from './Sorting.module.scss';\n\nconst Sorting:FC = () => {\n  const dispath = useAppDispatch();\n\n  const sortUp = () => {\n    dispath(sortingUserList('sortUp'));\n  };\n\n  const sortDown = () => {\n    dispath(sortingUserList('sortDown'));\n  };\n\n  return (\n    <div className={styles.sorting}>\n      <span className={styles.sortingText}>Sort users by age:</span>\n      <button type=\"button\" onClick={sortUp}><CaretUpOutlined /></button>\n      <button type=\"button\" onClick={sortDown}><CaretDownOutlined /></button>\n    </div>\n  );\n};\n\nexport default Sorting;\n","import AntPagination from './AntPagination';\n\nexport default AntPagination;\n","import React, { FC, MouseEvent, useEffect } from 'react';\nimport { Pagination } from 'antd';\nimport { useAppSelector, useAppDispatch } from '../../store/hooks/redux';\nimport { changesElementsOnPage, changesNumPage, changesMaxPages } from '../../store/users/usersSlise';\nimport styles from './AntPagination.module.scss';\nimport 'antd/es/pagination/style/css';\n\nconst AntPagination:FC = () => {\n  const dispath = useAppDispatch();\n  const usersData = useAppSelector((state) => state.usersReduser);\n  const {\n    usersList, maxPages, elementsOnPage, activePage,\n  } = usersData;\n\n  useEffect(() => {\n    const lenghtList = usersList.length;\n    // если elementsOnPage приводится к числу, то считает максимальное кол-во страниц\n    if (maxPages) {\n      const elementsOnPageNum = (Number(elementsOnPage));\n      if (elementsOnPageNum) {\n        dispath(changesMaxPages(Math.ceil(lenghtList / elementsOnPageNum)));\n      } else {\n        // если нет, максимальное кол-во страниц 0\n        dispath(changesMaxPages(0));\n      }\n    }\n  }, [elementsOnPage, dispath]);\n\n  const onChange = (page: number) => {\n    dispath(changesNumPage(page));\n  };\n\n  const onClick = (event:MouseEvent<HTMLButtonElement>) => {\n    const value = event.currentTarget.innerText;\n    dispath(changesElementsOnPage(value));\n  };\n\n  return (\n    <div className={styles.pagination}>\n      <div className={styles.paginationSettings}>\n        <span className={styles.paginationSettingsText}>\n          Show elements per page:\n        </span>\n        <button type=\"button\" onClick={onClick}>5</button>\n        <button type=\"button\" onClick={onClick}>10</button>\n        <button type=\"button\" onClick={onClick}>all</button>\n      </div>\n      <Pagination\n        total={maxPages * 10}\n        current={activePage}\n        showSizeChanger={false}\n        onChange={onChange}\n        className={styles['ant-pagination']}\n      />\n    </div>\n\n  );\n};\n\nexport default AntPagination;\n","import Loader from './Loader';\n\nexport default Loader;\n","import React, { FC } from 'react';\nimport { Spin, Space } from 'antd';\nimport styles from './Loader.module.scss';\nimport 'antd/es/spin/style/css';\n\nconst Loader:FC = () => (\n  <Space size=\"large\" className={styles['ant-spin-spinning']}>\n    <Spin size=\"large\" />\n  </Space>\n);\n\nexport default Loader;\n","import HomePage from './HomePage';\n\nexport default HomePage;\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { FC, useEffect, useState } from 'react';\nimport { debounce } from 'lodash';\nimport { fetchGetUsers } from '../../store/users/usersActions';\nimport UsersList from '../../components/users-list';\nimport AntInput from '../../components/input';\nimport Sorting from '../../components/sorting';\nimport AntPagination from '../../components/pagination';\nimport Loader from '../../components/loader';\nimport styles from './HomePage.module.scss';\nimport { useAppSelector, useAppDispatch } from '../../store/hooks/redux';\n\nconst HomePage:FC = () => {\n  const dispath = useAppDispatch();\n  const {\n    searchStr, elementsOnPage, isLoading, usersList,\n  } = useAppSelector((state) => state.usersReduser);\n\n  // action creator\n  const boundFetchGetUsers = () => dispath(fetchGetUsers(searchStr));\n\n  // вызовет dispathFetchGetUsers с задержкой\n  const debouncedDispathFetchGetUsers = debounce(boundFetchGetUsers, 500);\n\n  const loader = isLoading ? <Loader /> : null;\n  const input = <AntInput />;\n  const list = !isLoading && usersList.length ? <UsersList /> : null;\n  const sorting = !isLoading && usersList.length ? <Sorting /> : null;\n  const pagination = !isLoading && usersList.length ? <AntPagination /> : null;\n\n  useEffect(() => {\n    debouncedDispathFetchGetUsers();\n  }, [searchStr, elementsOnPage]);\n\n  return (\n    <main className={styles.main}>\n      {loader}\n      {input}\n      {sorting}\n      {list}\n      {pagination}\n    </main>\n  );\n};\n\nexport default HomePage;\n","import Plug from './Plug';\n\nexport default Plug;\n","import React, { FC } from 'react';\nimport styles from './Plug.module.scss';\n\nconst Plug:FC = () => (\n  <div className={styles.plug}>\n    This section is still under development\n  </div>\n);\n\nexport default Plug;\n","import UserFull from './UserFull';\n\nexport default UserFull;\n","import React, { FC } from 'react';\n// import styles from './UserFull.module.scss';\nimport Plug from '../plug';\n\nconst UserFull:FC = () => (\n  <div>\n    <Plug />\n  </div>\n);\nexport default UserFull;\n","import React, { FC } from 'react';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport HomePage from '../pages/home';\nimport UserFull from '../components/user-full';\n\nconst App:FC = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/user/:name\" element={<UserFull />} />\n    </Routes>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { setUpStore } from './store/store';\nimport App from './app/App';\nimport './styles/index.scss';\n\nconst store = setUpStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPreview\":\"UserPreview_userPreview__15hcO\",\"userAvatarWrapper\":\"UserPreview_userAvatarWrapper__3Ci_3\",\"userInfo\":\"UserPreview_userInfo__2cXY2\",\"userInfoItem\":\"UserPreview_userInfoItem__3uE43\",\"buttonInList\":\"UserPreview_buttonInList__1a2KF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editForm\":\"CompletedForm_editForm__2ekt4\",\"formItem\":\"CompletedForm_formItem__ii3jZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"AntPagination_pagination__1MbyP\",\"paginationSettings\":\"AntPagination_paginationSettings__1e6Ad\",\"paginationSettingsText\":\"AntPagination_paginationSettingsText__2moKf\",\"ant-pagination\":\"AntPagination_ant-pagination__1jJkq\"};"],"sourceRoot":""}