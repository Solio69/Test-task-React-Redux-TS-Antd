{"version":3,"sources":["components/input/AntInput.module.scss","components/sorting/Sorting.module.scss","components/users-list/UsersList.module.scss","pages/home/HomePage.module.scss","store/users/usersActions.tsx","store/users/usersSlise.tsx","store/index.tsx","store/selectors/index.tsx","services/apiService.tsx","components/user/user-preview/index.tsx","components/user/user-preview/UserPreview.tsx","utils/index.tsx","components/users-list/index.tsx","components/users-list/UsersList.tsx","components/input/index.tsx","components/input/AntInput.tsx","components/sorting/index.tsx","components/sorting/Sorting.tsx","components/pagination/index.tsx","components/pagination/AntPagination.tsx","pages/home/index.tsx","pages/home/HomePage.tsx","components/user/user-full/index.tsx","components/user/user-full/UserFull.tsx","app/App.tsx","index.tsx","components/user/user-preview/UserPreview.module.scss","components/pagination/AntPagination.module.scss"],"names":["module","exports","baseStr","fetchGetUsers","createAsyncThunk","name","a","rejectWithValue","url","fetch","method","headers","response","ok","Error","status","json","message","usersSlise","createSlice","initialState","usersList","searchStr","isSorting","maxPages","activePage","elementsOnPage","reducers","changeSearchStr","state","action","payload","sortingUserList","changesElementsOnPage","changesMaxPages","changesNumPage","changesUserData","extraReducers","pending","type","fulfilled","lenghtList","length","Number","Math","ceil","rejected","actions","store","configureStore","reducer","users","usersReduser","useStateUsers","useSelector","ApiService","id","newUserData","body","age","this","JSON","stringify","apiService","UserPreview","dispath","useDispatch","useState","newAge","setNewAge","newName","setNewName","randonAvatar","min","max","rand","random","round","randomInteger","routStr","isModalVisible","setIsModalVisible","onFinish","val","newObj","putUserUpdate","then","res","newUserList","map","el","CompletedForm","value","fields","size","Item","label","htmlType","modal","title","visible","onCancel","footer","userPreview","className","styles","userAvatarWrapper","src","alt","userInfo","to","userInfoItem","userButton","userButtonEdit","onClick","FormOutlined","userButtonDelete","deleteUser","CloseCircleOutlined","UsersList","usersData","renderList","oldArr","newList","sort","b","sortingList","oneElem","splice","getPartList","AntInput","inputWrapper","placeholder","onChange","event","target","trim","toLowerCase","Sorting","sorting","sortingText","CaretUpOutlined","CaretDownOutlined","AntPagination","useEffect","elementsOnPageNum","currentTarget","innerText","pagination","paginationSettings","paginationSettingsText","total","current","showSizeChanger","page","HomePage","debouncedDispathFetchGetUsers","debounce","main","UserFull","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58af400b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"AntInput_inputWrapper__1FO2_\",\"ant-input\":\"AntInput_ant-input__2ouOV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sorting\":\"Sorting_sorting__1MpOR\",\"sortingText\":\"Sorting_sortingText__2yOrj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersList\":\"UsersList_usersList__KaSBr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"HomePage_main__NSygf\"};","/* eslint-disable @typescript-eslint/default-param-last */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nconst baseStr = 'https://621c7b30768a4e1020ab3244.mockapi.io/api';\n\nconst fetchGetUsers = createAsyncThunk(\n  'users/fetchGetUsers',\n  async (name:string, { rejectWithValue }) => {\n    const url = name ? `${baseStr}/users?name=${name}` : `${baseStr}/users`;\n    try {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server error ${response.status}!`);\n      }\n\n      return await response.json();\n    } catch (error: any) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport { fetchGetUsers };\n","/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { createSlice } from '@reduxjs/toolkit';\nimport { fetchGetUsers } from './usersActions';\n\ninterface InitialStateTypes {\n  usersList: [],\n  searchStr:string,\n  isSorting:'sortUp' | 'sortDown' | '',\n  maxPages:number,\n  activePage:number,\n  elementsOnPage:string\n}\n\nconst initialState: InitialStateTypes = {\n  usersList: [],\n  searchStr: '',\n  isSorting: '',\n  maxPages: 0,\n  activePage: 1,\n  elementsOnPage: '5',\n};\n\nconst usersSlise = createSlice({\n  name: 'users',\n  initialState,\n\n  reducers: {\n    changeSearchStr (state, action) {\n      state.searchStr = action.payload;\n    },\n\n    sortingUserList (state, action) {\n      state.isSorting = action.payload;\n    },\n\n    changesElementsOnPage (state, action) {\n      state.elementsOnPage = action.payload;\n    },\n\n    changesMaxPages (state, action) {\n      state.maxPages = action.payload;\n    },\n\n    changesNumPage (state, action) {\n      state.activePage = action.payload;\n    },\n\n    changesUserData (state, action) {\n      state.usersList = action.payload;\n    },\n  },\n\n  extraReducers: {\n    [fetchGetUsers.pending.type]: (state) => {\n      // console.log('pending', action.payload)\n    },\n\n    [fetchGetUsers.fulfilled.type]: (state, action) => {\n      // console.log('fulfilled', action);\n      state.usersList = action.payload;\n      const lenghtList = action.payload.length;\n      // если elementsOnPage приводится к числу, то считает максимальное кол-во страниц\n      const elementsOnPage = (Number(state.elementsOnPage));\n      if (elementsOnPage) {\n        // то пересчитает maxPages\n        state.maxPages = Math.ceil(lenghtList / elementsOnPage);\n      }\n    },\n\n    [fetchGetUsers.rejected.type]: (state, action) => {\n      // console.log('rejected', action.payload)\n    },\n  },\n});\n\nexport const {\n  changeSearchStr, sortingUserList, changesElementsOnPage, changesNumPage, changesMaxPages, changesUserData,\n} = usersSlise.actions;\n\nexport default usersSlise.reducer;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { configureStore } from '@reduxjs/toolkit';\nimport usersReduser from './users/usersSlise';\n\nconst store = configureStore({\n  reducer: {\n    users: usersReduser,\n  },\n});\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport default store;\n","import { useSelector, RootStateOrAny } from 'react-redux';\n\nconst useStateUsers = () => useSelector((state: RootStateOrAny) => state.users);\n\n// const useStateUsers = () => useSelector((state: RootStateOrAny) => state.users.usersList);\n// const useStateSearchStr = () => useSelector((state: RootStateOrAny) => state.users.searchStr);\n// const useStateAtivePage = () => useSelector((state: RootStateOrAny) => state.users.activePage);\n// const useStateElementsOnPage = () => useSelector((state: RootStateOrAny) => state.users.elementsOnPage);\n\nexport {\n  useStateUsers,\n};\n","class ApiService {\n  baseStr = 'https://621c7b30768a4e1020ab3244.mockapi.io/api';\n\n  async putUserUpdate (id:string, newUserData:any) {\n    const body = {\n      age: newUserData.age,\n      name: newUserData.name,\n    };\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = await fetch(`${this.baseStr}/users/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(body),\n      headers,\n    });\n\n    return response.json();\n  }\n\n  async deleteUser (id:string) {\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = await fetch(`${this.baseStr}/users/${id}`, {\n      method: 'DELETE',\n      headers,\n    });\n\n    return response.json();\n  }\n}\n\nconst apiService = new ApiService();\n\nexport { apiService };\n","import UserPreview from './UserPreview';\n\nexport default UserPreview;\n","/* eslint-disable no-return-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable react/no-unstable-nested-components */\nimport React, { FC, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FormOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport {\n  Form, Input, Button, Modal,\n} from 'antd';\nimport { fetchGetUsers } from '../../../store/users/usersActions';\nimport { randomInteger } from '../../../utils';\nimport { changesUserData } from '../../../store/users/usersSlise';\nimport { useStateUsers } from '../../../store/selectors';\nimport { apiService } from '../../../services/apiService';\nimport styles from './UserPreview.module.scss';\nimport 'antd/es/modal/style/css';\n\ninterface UserPreviewProps {\n  id:string,\n  name:string,\n  age:number\n}\n\nconst UserPreview:FC<UserPreviewProps> = ({ id, name, age }) => {\n  const dispath = useDispatch();\n  const usersData = useStateUsers();\n  const { usersList } = usersData;\n  const [newAge, setNewAge] = useState(age);\n  const [newName, setNewName] = useState(name);\n  // генерирует ссылку на рандомный аватар\n  const randonAvatar = `https://i.pravatar.cc/150?img=${randomInteger(1, 70)}`;\n\n  const routStr = `/user/${name}`;\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const onCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const onFinish = (val:any) => {\n    if (val.age !== age || val.name !== name) {\n      const newObj = val;\n      newObj.id = id;\n      newObj.age = Number(val.age);\n\n      apiService.putUserUpdate(id, newObj).then((res) => {\n        if (res.name) {\n          setNewName(res.name);\n        }\n        if (res.age) {\n          setNewAge(res.age);\n        }\n\n        // передает в стор список с измененным элементом\n        const newUserList = [...usersList].map((el:any) => (el.id === res.id ? el = res : el));\n\n        dispath(changesUserData(newUserList));\n      });\n    }\n\n    setIsModalVisible(false);\n  };\n\n  const deleteUser = () => {\n    apiService.deleteUser(id).then(() => {\n      dispath(fetchGetUsers(''));\n    });\n  };\n\n  // форма заполненная данными\n  const CompletedForm = () => {\n    const [fields] = useState([\n      {\n        name: ['name'],\n        value: name,\n      },\n      {\n        name: ['age'],\n        value: age,\n      },\n    ]);\n\n    return (\n      <Form\n        size=\"middle\"\n        onFinish={onFinish}\n        fields={fields}\n      >\n\n        <Form.Item name=\"name\" label=\"Name:\">\n          <Input type=\"text\" />\n        </Form.Item>\n\n        <Form.Item name=\"age\" label=\"Age:\">\n          <Input type=\"number\" />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Save\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  };\n\n  // модальное окно\n  const modal = (\n    <Modal\n      title=\"Change user data\"\n      visible={isModalVisible}\n      onCancel={onCancel}\n      footer={false}\n    >\n      <CompletedForm />\n    </Modal>\n  );\n\n  const userPreview = (\n    <li key={id} className={styles.userPreview}>\n      <div className={styles.userAvatarWrapper}>\n        <img src={randonAvatar} alt=\"avatar\" />\n      </div>\n      <div className={styles.userInfo}>\n        <Link to={routStr}>\n          <div className={styles.userInfoItem}>\n            Name:\n            {' '}\n            {newName}\n          </div>\n        </Link>\n        <div className={styles.userInfoItem}>\n          Age:\n          {' '}\n          {newAge}\n        </div>\n      </div>\n      <div className={styles.userButton}>\n        <button\n          type=\"button\"\n          className={styles.userButtonEdit}\n          onClick={showModal}\n        >\n          <FormOutlined />\n          Edit\n        </button>\n        <button\n          type=\"button\"\n          className={styles.userButtonDelete}\n          onClick={deleteUser}\n        >\n          <CloseCircleOutlined />\n          Delete\n        </button>\n      </div>\n    </li>\n  );\n\n  return (\n    <>\n      {userPreview}\n      {modal}\n    </>\n\n  );\n};\n\nexport default UserPreview;\n","// вернет раномное целое число\nconst randomInteger = (min:number, max:number):number => {\n  const rand = min - 0.5 + Math.random() * (max - min + 1);\n\n  return Math.round(rand);\n};\n\nexport { randomInteger };\n","import UsersList from './UsersList';\n\nexport default UsersList;\n","import React, { FC } from 'react';\nimport { useStateUsers } from '../../store/selectors';\nimport UserPreview from '../user/user-preview';\nimport styles from './UsersList.module.scss';\n\nconst UsersList:FC = () => {\n  const usersData = useStateUsers();\n  const {\n    usersList, isSorting, elementsOnPage, activePage,\n  } = usersData;\n\n  // вернет отсортированный список\n  const sortingList = () => {\n    const newList = [...usersList];\n    if (isSorting === 'sortDown') {\n      return newList.sort((a:any, b:any) => (a.age < b.age ? 1 : -1));\n    } if (isSorting === 'sortUp') {\n      return newList.sort((a:any, b:any) => (a.age > b.age ? 1 : -1));\n    }\n\n    return newList;\n  };\n\n  // получить часть списка в зависимости от количества элементов на странице и номера страницы\n  function getPartList () {\n    const oldArr = [...sortingList()];\n    let newArr = [];\n    if (Number(elementsOnPage)) {\n      const oneElem = ((activePage - 1) * elementsOnPage);\n      newArr = oldArr.splice(oneElem, elementsOnPage);\n\n      return newArr;\n    }\n\n    return oldArr;\n  }\n\n  const renderList = getPartList().map((el:any) => <UserPreview id={el.id} name={el.name} age={el.age} key={el.id} />);\n\n  return (\n    <ul className={styles.usersList}>\n      {renderList}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import AntInput from './AntInput';\n\nexport default AntInput;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { FC, ChangeEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Input } from 'antd';\nimport { changeSearchStr } from '../../store/users/usersSlise';\nimport styles from './AntInput.module.scss';\nimport 'antd/es/input/style/css';\n\nconst AntInput:FC = () => {\n  const dispath = useDispatch();\n\n  // получит значение из input и передаст его в stor redux\n  const onChange = (event:ChangeEvent<HTMLInputElement>):void => {\n    let { value } = event.target;\n    value = value.trim().toLowerCase();\n    dispath(changeSearchStr(value));\n  };\n\n  return (\n    <div className={styles.inputWrapper}>\n      <Input\n        placeholder=\"Search by name\"\n        onChange={onChange}\n        className={styles['ant-input']}\n      />\n    </div>\n\n  );\n};\n\nexport default AntInput;\n","import Sorting from './Sorting';\n\nexport default Sorting;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { FC } from 'react';\nimport { CaretUpOutlined, CaretDownOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport { sortingUserList } from '../../store/users/usersSlise';\n\nimport styles from './Sorting.module.scss';\n\nconst Sorting:FC = () => {\n  const dispath = useDispatch();\n\n  const sortUp = () => {\n    dispath(sortingUserList('sortUp'));\n  };\n\n  const sortDown = () => {\n    dispath(sortingUserList('sortDown'));\n  };\n\n  return (\n    <div className={styles.sorting}>\n      <span className={styles.sortingText}>Sort users by age:</span>\n      <button type=\"button\" onClick={sortUp}><CaretUpOutlined /></button>\n      <button type=\"button\" onClick={sortDown}><CaretDownOutlined /></button>\n    </div>\n  );\n};\n\nexport default Sorting;\n","import AntPagination from './AntPagination';\n\nexport default AntPagination;\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Pagination } from 'antd';\nimport { useStateUsers } from '../../store/selectors';\nimport { changesElementsOnPage, changesNumPage, changesMaxPages } from '../../store/users/usersSlise';\nimport styles from './AntPagination.module.scss';\nimport 'antd/es/pagination/style/css';\n\nconst AntPagination:FC = () => {\n  const dispath = useDispatch();\n  const usersData = useStateUsers();\n  const {\n    usersList, maxPages, elementsOnPage, activePage,\n  } = usersData;\n\n  useEffect(() => {\n    const lenghtList = usersList.length;\n    // если elementsOnPage приводится к числу, то считает максимальное кол-во страниц\n    const elementsOnPageNum = (Number(elementsOnPage));\n    if (elementsOnPageNum) {\n      dispath(changesMaxPages(Math.ceil(lenghtList / elementsOnPage)));\n    } else {\n      // если нет, максимальное кол-во страниц 0\n      dispath(changesMaxPages(0));\n    }\n  }, [elementsOnPage]);\n\n  const onChange = (page: number) => {\n    dispath(changesNumPage(page));\n  };\n\n  const onClick = (event:React.MouseEvent<HTMLButtonElement>) => {\n    const value = event.currentTarget.innerText;\n    dispath(changesElementsOnPage(value));\n  };\n\n  return (\n    <div className={styles.pagination}>\n      <div className={styles.paginationSettings}>\n        <span className={styles.paginationSettingsText}>\n          Show elements per page:\n        </span>\n        <button type=\"button\" onClick={onClick}>5</button>\n        <button type=\"button\" onClick={onClick}>10</button>\n        <button type=\"button\" onClick={onClick}>all</button>\n      </div>\n      <Pagination\n        total={maxPages * 10}\n        current={activePage}\n        showSizeChanger={false}\n        onChange={onChange}\n        className={styles['ant-pagination']}\n      />\n    </div>\n\n  );\n};\n\nexport default AntPagination;\n","import HomePage from './HomePage';\n\nexport default HomePage;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { debounce } from 'lodash';\nimport { fetchGetUsers } from '../../store/users/usersActions';\nimport { useStateUsers } from '../../store/selectors';\nimport UsersList from '../../components/users-list';\nimport AntInput from '../../components/input';\nimport Sorting from '../../components/sorting';\nimport AntPagination from '../../components/pagination';\nimport styles from './HomePage.module.scss';\n\nconst HomePage:FC = () => {\n  const dispath = useDispatch();\n  const usersData = useStateUsers();\n  const { usersList, searchStr, elementsOnPage } = usersData;\n\n  // action creator\n  const boundFetchGetUsers = () => dispath(fetchGetUsers(searchStr));\n  // вызовет dispathFetchGetUsers с задержкой\n  const debouncedDispathFetchGetUsers = debounce(boundFetchGetUsers, 500);\n\n  useEffect(() => {\n    debouncedDispathFetchGetUsers();\n  }, [searchStr, elementsOnPage]);\n\n  return (\n    <main className={styles.main}>\n      <AntInput />\n      <Sorting />\n      <UsersList />\n      <AntPagination />\n    </main>\n  );\n};\n\nexport default HomePage;\n","import UserFull from './UserFull';\n\nexport default UserFull;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { FC } from 'react';\nimport styles from './UserFull.module.scss';\n\nconst UserFull:FC = () => {\n  const test = 'UserFull';\n\n  return (\n    <div>\n      {test}\n    </div>\n  );\n};\n\nexport default UserFull;\n","import React, { FC } from 'react';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport HomePage from '../pages/home';\nimport UserFull from '../components/user/user-full';\n\nconst App:FC = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/user/:name\" element={<UserFull />} />\n    </Routes>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './app/App';\nimport './styles/index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPreview\":\"UserPreview_userPreview__2j1wJ\",\"userAvatarWrapper\":\"UserPreview_userAvatarWrapper__3gFn4\",\"userInfo\":\"UserPreview_userInfo__Gf7-U\",\"userInfoItem\":\"UserPreview_userInfoItem__2arTw\",\"userButton\":\"UserPreview_userButton__3QkO4\",\"userButtonEdit\":\"UserPreview_userButtonEdit__WNwK2\",\"userButtonDelete\":\"UserPreview_userButtonDelete__KVquk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"AntPagination_pagination__1MbyP\",\"paginationSettings\":\"AntPagination_paginationSettings__1e6Ad\",\"paginationSettingsText\":\"AntPagination_paginationSettingsText__2moKf\",\"ant-pagination\":\"AntPagination_ant-pagination__1jJkq\"};"],"sourceRoot":""}